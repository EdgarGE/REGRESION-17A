####VECTORES
a <- 2 + 3 #vector de longuitud 1
b <- c(3,4) - c(6,1) #esta diferencia genera un vector de 2 entradas
b
c <- c(4, 5, 6) * c(5,2,1) #genera un vector de 3 entradas
c# hace la operacion entrada por entrada
d <- c(1:50, 7, 99)
length(c)
length(d)
### OPERACIONES LOGICAS CON VECTORES
d>= 45
d== 50
d!=35
### SUCESIONES CON OPERADOR Y FUNCIONES
help(seq)
z <- seq(0,30,3)
z
seq( from=0, to=30, by=3 )
seq( by=3, to=30, from=0 )
seq( from=1, to=30, by=3 )
seq( 10 )
seq( 2,10 )
seq( from=3, to=10 )
secuencia <- seq ( 1, 10, by=1 )
secuencia1 <- seq( 0, 100, by=10)
sec2 <- seq( 300, 130, by=-3)
sec2
### 33 MUESTRAS (funcion sample (de esta dato:a este dato, cuantos datos aleatorio), genera muestras con datos aleatorios)
ingreso <- sample(20000:50000,100)
(ingreso <- sample(20000:50000,100))
ingreso >= 40000
help(sample)
 ingreso
### EJERCICIO 
ingreso1 <- c( NULL) 
length(ingreso)
for (i in 1:length(ingreso)){
if (ingreso[i] > 40000){
ingreso1[i] <- c(ingreso[i]) }
else { ingreso1[i]}}
ingreso1
##### 
#despliega automaticamente el valor del
aleatorios <- sample (1:10,20, replace = TRUE)
(aleatorios <- sample (1:10,20, replace = TRUE))
##Para seleccionar la posicion de un vector 
ingreso[50]
ingreso[73]
ingreso[c(30,50,70)]
ingreso[seq(20,100,10)]
ingreso[30:43]
ingreso[ingreso > 40000]
ingreso[ingreso < 22000]
ingreso[(ingreso > 20000) & (ingreso < 30000)]
# | = O, & = Y
#### 3 REPETIR ###
ss <- c(5, -7, 9)
ss
rr <- rep(ss, times =5)
rr
